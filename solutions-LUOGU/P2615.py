# -*- coding: utf-8  -*-
################################################
# hint
# 本题用一层循环模拟(注意循环的区间)
################################################
n = int(input())  # 幻方的大小
arr = [[0 for _ in range(n)] for _ in range(n)]
x = 0  # 表示某数字的行索引值
y = int((n - 1) / 2)  # 表示某数字的行索引值
arr[x][y] = 1  # 将1写在第一行的中间
for k in range(2, n ** 2 + 1):
    if x == 0 and y != n - 1:
        # 若(K−1)在第一行但不在最后一列，则将K填在最后一行，(K−1)所在列的右一列
        x = n - 1
        y = y + 1
    elif x != 0 and y == n - 1:
        # 若(K−1)在最后一列但不在第一行，则将K填在第一列，(K−1)所在行的上一行
        x = x - 1
        y = 0
    elif x == 0 and y == n - 1:
        # 若(K−1)在第一行最后一列，则将K填在(K−1)的正下方
        x = x + 1
    elif x != 0 and y != n - 1:
        # 若(K−1)既不在第一行，也不在最后一列
        if arr[x - 1][y + 1] == 0:
            x = x - 1
            y = y + 1
        else:
            x = x + 1
    arr[x][y] = k

for i in arr:
    print(' '.join(map(str, i)))
